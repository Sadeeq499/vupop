{
    "sourceFile": "lib/main.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1759141885759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759148388082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,13 +190,13 @@\n     printLogs('=============memoryInfo app ${memoryInfo?.appMem}');\n     printLogs('=============memoryInfo free ${memoryInfo?.freeMem}');\n     printLogs('=============memoryInfo low  ${memoryInfo?.lowMemory}');\n     printLogs('=============memoryInfo total ${memoryInfo?.totalMem}');\n-    printLogs('=============diskSpace freeSpace ${diskSpace?.freeSpace}');\n-    printLogs('=============diskSpace total ${diskSpace?.totalSpace}');\n-    printLogs('=============diskSpace usedSpace ${diskSpace?.usedSpace}');\n+    printLogs('=============diskSpace freeSpace ${diskSpace.freeSpace}');\n+    printLogs('=============diskSpace total ${diskSpace.totalSpace}');\n+    printLogs('=============diskSpace usedSpace ${diskSpace.usedSpace}');\n     String memInfo = encoder.convert(memoryInfo?.toMap());\n-    // printLogs('====================memInfo ${memInfo}');\n+    printLogs('====================memInfo ${memInfo}');\n   } catch (e) {\n     printLogs('getMemoryInfo Exception : $e');\n   }\n }\n"
                },
                {
                    "date": 1759148394351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,10 +193,10 @@\n     printLogs('=============memoryInfo total ${memoryInfo?.totalMem}');\n     printLogs('=============diskSpace freeSpace ${diskSpace.freeSpace}');\n     printLogs('=============diskSpace total ${diskSpace.totalSpace}');\n     printLogs('=============diskSpace usedSpace ${diskSpace.usedSpace}');\n-    String memInfo = encoder.convert(memoryInfo?.toMap());\n-    printLogs('====================memInfo ${memInfo}');\n+    // String memInfo = encoder.convert(memoryInfo?.toMap());\n+    // printLogs('====================memInfo ${memInfo}');\n   } catch (e) {\n     printLogs('getMemoryInfo Exception : $e');\n   }\n }\n"
                },
                {
                    "date": 1759148416549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n     printLogs('=============memoryInfo total ${memoryInfo?.totalMem}');\n     printLogs('=============diskSpace freeSpace ${diskSpace.freeSpace}');\n     printLogs('=============diskSpace total ${diskSpace.totalSpace}');\n     printLogs('=============diskSpace usedSpace ${diskSpace.usedSpace}');\n-    // String memInfo = encoder.convert(memoryInfo?.toMap());\n+    String memInfo = encoder.convert(memoryInfo?.toMap());\n     // printLogs('====================memInfo ${memInfo}');\n   } catch (e) {\n     printLogs('getMemoryInfo Exception : $e');\n   }\n"
                }
            ],
            "date": 1759141885759,
            "name": "Commit-0",
            "content": "import 'dart:convert';\nimport 'dart:io';\nimport 'dart:ui';\n\nimport 'package:firebase_analytics/firebase_analytics.dart';\nimport 'package:firebase_core/firebase_core.dart';\nimport 'package:firebase_crashlytics/firebase_crashlytics.dart';\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:flutter_screenutil/flutter_screenutil.dart';\nimport 'package:get/get.dart';\nimport 'package:get_storage/get_storage.dart';\nimport 'package:google_fonts/google_fonts.dart';\nimport 'package:memory_info/memory_info.dart';\nimport 'package:socials_app/firebase_options.dart';\nimport 'package:socials_app/services/notification_sevices.dart';\nimport 'package:socials_app/utils/common_code.dart';\nimport 'package:socials_app/utils/route_generator.dart';\nimport 'package:socials_app/views/screens/bottom/controller/bottom_bar_controller.dart';\n\nimport 'utils/app_colors.dart';\nimport 'utils/app_strings.dart';\nimport 'utils/screen_bindings.dart';\n\n// @pragma('vm:entry-point')\n// void callbackDispatcher() {\n//   Workmanager().executeTask((task, inputData) async {\n//     if (task == \"uploadVideo\") {\n//       // Call the video upload function\n//       String? userId = inputData?['userId'];\n//       String? videoPath = inputData?['videoPath'];\n//       String? thumbnailPath = inputData?['thumbnailFile'];\n//       String locationAddress = inputData?['address'];\n//       double? lat = inputData?['latitude'];\n//       double? lng = inputData?['longitude'];\n//       bool isFaceCam = inputData?['facecam'] == 'true';\n//       bool isPortrait = inputData?['isPortrait'] == 'true';\n//       List<String>? mentions =\n//           (inputData?['mentions'] as List<dynamic>?)?.cast<String>();\n//       List<String>? tags =\n//           (inputData?['tags'] as List<dynamic>?)?.cast<String>();\n\n//       if (videoPath != null && userId != null) {\n//         await PostRepo()\n//             .createPost(\n//           userId: userId,\n//           file: File(videoPath),\n//           locationAdress: locationAddress,\n//           lat: lat ?? 0.0,\n//           lng: lng ?? 0.0,\n//           mentions: mentions,\n//           tags: tags,\n//           thumbnailFile: File(thumbnailPath!),\n//           isFaceCam: isFaceCam,\n//           isPortrait: isPortrait,\n//           progress: (progress) async {},\n//         )\n//             .then((value) {\n//           printLogs('Post created');\n//         }).catchError((e) {\n//           printLogs('Error creating post: $e');\n//         });\n//       }\n\n//       return Future.value(true);\n//     }\n//     return Future.value(false);\n//   });\n// }\n\nString deviceToken = '';\n\nMemory? memoryInfo;\nFuture<void> main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  await SystemChrome.setPreferredOrientations([DeviceOrientation.portraitUp]);\n  await GetStorage.init();\n  await Firebase.initializeApp(\n      options: DefaultFirebaseOptions.currentPlatform, name: 'vupop');\n  await FirebaseAnalytics.instance.setAnalyticsCollectionEnabled(true);\n  FirebaseAnalytics.instance.logAppOpen();\n  FlutterError.onError = (flutterErrorDetails) {\n    FirebaseCrashlytics.instance.recordFlutterError(flutterErrorDetails);\n  };\n\n  PlatformDispatcher.instance.onError = (error, stack) {\n    FirebaseCrashlytics.instance.recordError(error, stack);\n    return true;\n  };\n\n  // Workmanager().initialize(callbackDispatcher, isInDebugMode: true);\n  deviceToken = await NotificationService().initNotification() ?? '';\n  await getMemoryInfo();\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  ThemeData _buildTheme(brightness) {\n    var baseTheme = ThemeData(brightness: brightness);\n\n    return baseTheme.copyWith(\n      textTheme: GoogleFonts.leagueSpartanTextTheme(baseTheme.textTheme),\n      scaffoldBackgroundColor: kBackgroundColor,\n      colorScheme: ThemeData().colorScheme.copyWith(primary: kPrimaryColor),\n      cupertinoOverrideTheme: const CupertinoThemeData(\n        primaryContrastingColor: Colors.white,\n      ),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return ScreenUtilInit(\n      designSize: const Size(428, 926),\n      minTextAdapt: true,\n      splitScreenMode: true,\n      builder: (context, child) {\n        return GetMaterialApp(\n            theme: _buildTheme(Brightness.light),\n            title: kAppName,\n            debugShowCheckedModeBanner: false,\n            defaultTransition: Transition.cupertino,\n            initialBinding: ScreenBindings(),\n            // initialRoute: kSignInRoute,\n            initialRoute: kSplashRoute,\n            // initialRoute: kFilterRoute,\n            getPages: RouteGenerator.getPages(),\n            builder: (context, child) {\n              return GestureDetector(\n                onHorizontalDragStart: Platform.isIOS\n                    ? (details) async {\n                        // print('===========details.localPosition.dx ${details.localPosition.dx}');\n                        // print('===========current route ${Get.routing.current}');\n                        // print('===========previous route ${Get.routing.previous}');\n\n                        if ((Get.routing.previous == \"/signInScreen\" &&\n                                Get.routing.current ==\n                                    \"/SingleCommunityChatScreen\") ||\n                            details.localPosition.dx > 100) {\n                          if (Get.routing.current ==\n                              \"/SingleCommunityChatScreen\") {\n                            Get.back();\n                          }\n                        } else if (details.localPosition.dx < 50) {\n                          // printLogs('======Get.routing.current ${Get.routing.current}');\n                          // Detect edge swipe\n                          if (Get.routing.route?.isFirst == false &&\n                              Get.routing.current != \"/bottomNavbarScreen\") {\n                            Get.back();\n                          } else if (Get.routing.current ==\n                              \"/bottomNavbarScreen\") {\n                            if (Get.isRegistered<BottomBarController>() &&\n                                Get.find<BottomBarController>()\n                                        .selectedIndex\n                                        .value >\n                                    0) {\n                              Get.find<BottomBarController>()\n                                  .selectedIndex\n                                  .value = Get.find<BottomBarController>()\n                                      .selectedIndex\n                                      .value -\n                                  1;\n                            }\n                          }\n                        }\n                      }\n                    : null,\n                child: MediaQuery(\n                    data: MediaQuery.of(context).copyWith(\n                        textScaler: TextScaler.linear(MediaQuery.of(context)\n                            .textScaleFactor\n                            .clamp(1.0, 1.0))),\n                    child: child!),\n              );\n            });\n      },\n    );\n  }\n}\n\ngetMemoryInfo() async {\n  try {\n    Memory memory = await MemoryInfoPlugin().memoryInfo;\n    DiskSpace diskSpace = await MemoryInfoPlugin().diskSpace;\n    JsonEncoder encoder = JsonEncoder.withIndent('  ');\n    memoryInfo = memory;\n    printLogs('=============memoryInfo app ${memoryInfo?.appMem}');\n    printLogs('=============memoryInfo free ${memoryInfo?.freeMem}');\n    printLogs('=============memoryInfo low  ${memoryInfo?.lowMemory}');\n    printLogs('=============memoryInfo total ${memoryInfo?.totalMem}');\n    printLogs('=============diskSpace freeSpace ${diskSpace?.freeSpace}');\n    printLogs('=============diskSpace total ${diskSpace?.totalSpace}');\n    printLogs('=============diskSpace usedSpace ${diskSpace?.usedSpace}');\n    String memInfo = encoder.convert(memoryInfo?.toMap());\n    // printLogs('====================memInfo ${memInfo}');\n  } catch (e) {\n    printLogs('getMemoryInfo Exception : $e');\n  }\n}\n"
        }
    ]
}