{
    "sourceFile": "lib/views/screens/profile/screen/profile_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1759231801007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759231811878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -887,8 +887,9 @@\n                     // height: 0.08,\n                   ),\n                 ),\n                 SizedBox(height: 20),\n+                // this part is for showing uploaded videos\n                 SizedBox(\n                   height: 280.h,\n                   width: Get.width,\n                   child: Obx(\n"
                },
                {
                    "date": 1759232247620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -933,8 +933,9 @@\n                                             ),\n                                           );\n                                         }\n \n+\n                                         return ListenableBuilder(\n                                           listenable: controller.pageController,\n                                           builder: (context, child) {\n                                             double scale = 1.0;\n"
                }
            ],
            "date": 1759231801007,
            "name": "Commit-0",
            "content": "import 'dart:io';\n\nimport 'package:cached_network_image/cached_network_image.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_screenutil/flutter_screenutil.dart';\nimport 'package:get/get.dart';\nimport 'package:modal_progress_hud_nsn/modal_progress_hud_nsn.dart';\nimport 'package:shimmer/shimmer.dart';\nimport 'package:socials_app/services/session_services.dart';\nimport 'package:socials_app/utils/app_colors.dart';\nimport 'package:socials_app/utils/app_images.dart';\nimport 'package:socials_app/utils/app_strings.dart';\nimport 'package:socials_app/views/custom_widgets/custom_scaffold.dart';\nimport 'package:socials_app/views/custom_widgets/custom_shimmer_image_widget.dart';\nimport 'package:socials_app/views/custom_widgets/drawer.dart';\nimport 'package:socials_app/views/screens/home_recordings/controller/recording_cont.dart';\n\nimport '../../../../utils/app_styles.dart';\nimport '../../../../utils/common_code.dart';\nimport '../../../custom_widgets/custom_app_dialogs.dart';\nimport '../../bottom/controller/bottom_bar_controller.dart';\nimport '../controller/profile_controller.dart';\n\nclass ProfileScreen extends GetView<ProfileScreenController> {\n  const ProfileScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    Future.microtask(() async {\n      Get.find<BottomBarController>().selectedIndex.value = 0;\n      if (Get.find<BottomBarController>().previousSelectedIndex.value == 1) {\n        Get.find<BottomBarController>().previousSelectedIndex.value = 0;\n        Get.find<RecordingController>().stopCamera();\n        Get.find<RecordingController>().resetRecording();\n      }\n      controller.getWalletBalance();\n      controller.getUploadingVideos();\n    });\n    return Obx(\n      () => ModalProgressHUD(\n        inAsyncCall: controller.isVerifyingPayout.value,\n        child: CustomScaffold(\n          className: 'Profile Screen',\n          screenName: \"\",\n          scaffoldKey: controller.scaffoldKeyProfile,\n          isFullBody: false,\n          backIconColor: kPrimaryColor,\n          leadingWidth: 0,\n          // isBackIcon: true,\n          /*leadingWidget: IconButton(\n            icon: const Icon(Icons.arrow_back_ios),\n            color: kPrimaryColor,\n            onPressed: () {\n              ///TODO back to home screen\n              Get.find<BottomBarController>().selectedIndex.value = 0;\n            },\n          ),*/\n          onWillPop: () {\n            print('===========hey');\n            // Get.find<BottomBarController>().selectedIndex.value = 0;\n            CommonCode.logOutConfirmation();\n          },\n          actions: [\n            Container(\n              padding: EdgeInsets.only(left: 20),\n              child: Image.asset(\n                kAppLogo,\n                width: 120.w,\n                height: 40.h,\n              ),\n            ),\n            const Spacer(),\n            GestureDetector(\n              onTap: () {\n                Get.toNamed(kNotificationRoute);\n              },\n              child: Image.asset(\n                kNotificationIcon,\n                width: 50.w,\n                height: 20.h,\n              ),\n            ),\n            Obx(() => controller.isOtherUser.value\n                ? const SizedBox()\n                : Padding(\n                    padding: const EdgeInsets.only(right: 20),\n                    child: GestureDetector(\n                      onTap: () {\n                        controller.scaffoldKeyProfile.currentState?.openDrawer();\n                      },\n                      child: const Icon(Icons.menu, color: kPrimaryColor),\n                    ),\n                  )),\n          ],\n          drawer: ProfileDrawer(),\n          body: SingleChildScrollView(\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Container(\n                    width: Get.width,\n                    height: 265.h,\n                    padding: EdgeInsets.symmetric(horizontal: 12.w, vertical: 8.h),\n                    decoration: BoxDecoration(color: kGreyContainerColor, borderRadius: BorderRadius.circular(8.r)),\n                    child: Row(\n                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                      crossAxisAlignment: CrossAxisAlignment.center,\n                      children: [\n                        Container(\n                          width: Get.width * 0.30,\n                          child: Column(\n                            mainAxisSize: MainAxisSize.min,\n                            children: [\n                              // const SizedBox(height: 10),\n                              Obx(\n                                () => controller.profileImageUrl.value.isEmpty\n                                    ? CustomImageShimmer(\n                                        width: 130.w,\n                                        height: 150.h,\n                                      )\n                                    : Container(\n                                        width: 130.w,\n                                        height: 150.h,\n                                        decoration: BoxDecoration(\n                                          borderRadius: BorderRadius.circular(10),\n                                          image: controller.userData.value?.image == ''\n                                              ? DecorationImage(\n                                                  image: AssetImage(kdummyPerson),\n                                                  fit: BoxFit.fill,\n                                                )\n                                              : DecorationImage(\n                                                  image: CommonCode().isValidURL(controller.userData.value?.image)\n                                                      ? CachedNetworkImageProvider(\n                                                          controller.profileImageUrl.value,\n                                                          // controller.userData.value?.image ?? \"\",\n                                                          // \"https://vupop-public.s3.eu-north-1.amazonaws.com/uploads/1745488332413_image_picker_66BC510C-953C-43C5-B628-CB57B5788C13-18711-000004BE3DA36923.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6ODU2XI34DAAZENQ%2F20250508%2Feu-north-1%2Fs3%2Faws4_request&X-Amz-Date=20250508T191450Z&X-Amz-Expires=3600&X-Amz-Signature=988097635bce9b0afdffd0617e034981abb6e81537d22a0438eac8837403c69d&X-Amz-SignedHeaders=host&x-amz-checksum-mode=ENABLED&x-id=GetObject\",\n                                                          errorListener: (exception) {\n                                                            // Log or handle the error\n                                                            printLogs('Image loading error: $exception');\n                                                            if (exception.toString().contains(\"Invalid statusCode:\")) {\n                                                              controller.getUserProfileImage();\n                                                            }\n                                                          },\n                                                        ) as ImageProvider\n                                                      : AssetImage((kdummyPerson)),\n                                                  fit: BoxFit.cover),\n                                        ),\n                                      ),\n                              ),\n                              // CachedImage(\n                              //   url: controller.userData.value?.image ?? \"\",\n                              //   width: 200.w,\n                              //   height: 150.h,\n                              // ),\n                              const SizedBox(height: 10),\n                              Flexible(\n                                child: Text(\n                                  \"${controller.userData.value?.name ?? SessionService().user?.name}\" ?? 'N/A',\n                                  textAlign: TextAlign.center,\n                                  maxLines: 2,\n                                  overflow: TextOverflow.ellipsis,\n                                  style: AppStyles.labelTextStyle().copyWith(\n                                    color: kWhiteColor,\n                                    fontSize: 22.sp,\n                                    fontFamily: 'Norwester',\n                                  ),\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                        SizedBox(width: Get.width * 0.03),\n                        Expanded(\n                            child: SizedBox(\n                          width: Get.width * 0.65,\n                          height: Get.height,\n                          child: Obx(\n                            () => Column(\n                              mainAxisSize: MainAxisSize.min,\n                              mainAxisAlignment: MainAxisAlignment.center,\n                              children: [\n                                Stack(\n                                  children: [\n                                    Obx(\n                                      () => Container(\n                                        width: Get.width,\n                                        height: 150.h,\n                                        padding: EdgeInsets.symmetric(vertical: 20),\n                                        decoration: BoxDecoration(\n                                            image: DecorationImage(\n                                                image: AssetImage(controller.isAccountDetailsAdded.value &&\n                                                        (controller.isEmailVerified.value || Get.find<BottomBarController>().isPayoutVerified.isTrue)\n                                                    ? kPayoutsBgGreenCircle\n                                                    : controller.isAccountDetailsAdded.value && !controller.isEmailVerified.value\n                                                        ? kPayoutsBgOrangeCircle\n                                                        : kPayoutsBgWhiteCircle),\n                                                fit: BoxFit.fill),\n                                            borderRadius: BorderRadius.circular(4.r)),\n                                        child: Column(\n                                          mainAxisAlignment: MainAxisAlignment.start,\n                                          crossAxisAlignment: CrossAxisAlignment.center,\n                                          children: [\n                                            Text(\n                                              controller.walletData.value?.readyToWithdrawAmount != null\n                                                  ? \"£${controller.walletData.value?.readyToWithdrawAmount?.toStringAsFixed(2)}\"\n                                                  : 'N/A',\n                                              textAlign: TextAlign.center,\n                                              maxLines: 1,\n                                              overflow: TextOverflow.ellipsis,\n                                              style: AppStyles.appBarHeadingTextStyle().copyWith(\n                                                color: kBlackColor,\n                                                fontWeight: FontWeight.w600,\n                                                fontSize: 24.sp,\n                                                fontFamily: 'Norwester',\n                                              ),\n                                            ),\n                                            SizedBox(\n                                              height: 4,\n                                            ),\n                                            Text(\n                                              \"Total Payouts\",\n                                              textAlign: TextAlign.center,\n                                              maxLines: 2,\n                                              overflow: TextOverflow.ellipsis,\n                                              style: AppStyles.labelTextStyle().copyWith(\n                                                color: kBlackColor.withOpacity(0.6),\n                                                fontWeight: FontWeight.w600,\n                                                fontSize: 14.sp,\n                                              ),\n                                            ),\n                                          ],\n                                        ),\n                                      ),\n                                    ),\n                                    // Clickable \"Add Bank\" button in white circle\n                                    Positioned(\n                                      bottom: 0, // Adjust to fit perfectly in the white circle\n                                      left: Get.width * 0.1, // Center it horizontally\n                                      right: Get.width * 0.1,\n                                      child: GestureDetector(\n                                        onTap: controller.isAccountDetailsAdded.value &&\n                                                (controller.isEmailVerified.value || Get.find<BottomBarController>().isPayoutVerified.isTrue)\n                                            ? null\n                                            : controller.isAccountDetailsAdded.value\n                                                ? () {\n                                                    showWithdrawDialog(\n                                                      onContinueBtnClick: () async {\n                                                        Get.back();\n                                                        // Get.toNamed(kAccountDetailsRoute);\n                                                        controller.verifyPayouts(notificationId: controller.payoutNotification.value?.id ?? '');\n                                                      },\n                                                    );\n                                                  }\n                                                : () {\n                                                    Get.toNamed(kAccountDetailsRoute);\n                                                  },\n                                        child: Container(\n                                          padding: EdgeInsets.symmetric(vertical: 8.h, horizontal: 16.w),\n                                          decoration: BoxDecoration(\n                                            color: Colors.transparent, // Or add a subtle background\n                                            borderRadius: BorderRadius.circular(20.r),\n                                          ),\n                                          child: Row(\n                                            mainAxisSize: MainAxisSize.min,\n                                            crossAxisAlignment: CrossAxisAlignment.center,\n                                            mainAxisAlignment: MainAxisAlignment.center,\n                                            children: [\n                                              Icon(\n                                                controller.isAccountDetailsAdded.value &&\n                                                        (controller.isEmailVerified.value || Get.find<BottomBarController>().isPayoutVerified.isTrue)\n                                                    ? Icons.verified_sharp\n                                                    : controller.isAccountDetailsAdded.value && !controller.isEmailVerified.value\n                                                        ? Icons.verified_sharp\n                                                        : Icons.add_circle,\n                                                color: controller.isAccountDetailsAdded.value &&\n                                                        (controller.isEmailVerified.value || Get.find<BottomBarController>().isPayoutVerified.isTrue)\n                                                    ? kWhiteColor\n                                                    : kBlackColor,\n                                                size: 20,\n                                              ),\n                                              Text(\n                                                controller.isAccountDetailsAdded.value &&\n                                                        (controller.isEmailVerified.value || Get.find<BottomBarController>().isPayoutVerified.isTrue)\n                                                    ? \" Verified\"\n                                                    : controller.isAccountDetailsAdded.value && !controller.isEmailVerified.value\n                                                        ? \" Confirm\"\n                                                        : \" Add Bank\",\n                                                textAlign: TextAlign.center,\n                                                maxLines: 1,\n                                                overflow: TextOverflow.ellipsis,\n                                                style: AppStyles.labelTextStyle().copyWith(\n                                                  color: controller.isAccountDetailsAdded.value &&\n                                                          (controller.isEmailVerified.value ||\n                                                              Get.find<BottomBarController>().isPayoutVerified.isTrue)\n                                                      ? kWhiteColor\n                                                      : kBlackColor,\n                                                  fontWeight: FontWeight.w700,\n                                                  fontSize: 14.sp,\n                                                ),\n                                              ),\n                                            ],\n                                          ),\n                                        ),\n                                      ),\n                                    ),\n                                  ],\n                                ),\n                                SizedBox(\n                                  height: Get.height * 0.02,\n                                ),\n                                Row(\n                                  mainAxisSize: MainAxisSize.min,\n                                  crossAxisAlignment: CrossAxisAlignment.center,\n                                  children: [\n                                    Icon(\n                                      Icons.info_outline_rounded,\n                                      color: kWhiteColor.withOpacity(0.7),\n                                    ),\n                                    SizedBox(\n                                      width: 5,\n                                    ),\n                                    Flexible(\n                                      child: Text(\n                                        \"Add & Verify your Bank Details to get your Royalty payouts.\",\n                                        textAlign: TextAlign.left,\n                                        maxLines: 2,\n                                        overflow: TextOverflow.ellipsis,\n                                        style: AppStyles.labelTextStyle().copyWith(\n                                          fontFamily: 'League Spartan',\n                                          color: kWhiteColor.withOpacity(0.7),\n                                          fontWeight: FontWeight.w400,\n                                          fontSize: 12.sp,\n                                        ),\n                                      ),\n                                    ),\n                                  ],\n                                ),\n                              ],\n                            ),\n                          ),\n                        ))\n                        // Expanded(\n                        //   child: SizedBox(\n                        //     width: Get.width * 0.48,\n                        //     // height: 250.h,\n                        //     child: Column(\n                        //       mainAxisAlignment: MainAxisAlignment.center,\n                        //       crossAxisAlignment: CrossAxisAlignment.center,\n                        //       children: [\n                        //         Container(\n                        //           padding: EdgeInsets.symmetric(horizontal: 12, vertical: 8),\n                        //           clipBehavior: Clip.antiAlias,\n                        //           decoration: BoxDecoration(\n                        //             borderRadius: BorderRadius.circular(8),\n                        //             border: Border.all(\n                        //               color: kPrimaryColor,\n                        //               width: 1,\n                        //             ),\n                        //           ),\n                        //           child: GestureDetector(\n                        //               onTap: () {\n                        //                 /*showModalBottomSheet(\n                        //                   context: context,\n                        //                   backgroundColor: kBackgroundColor,\n                        //                   isScrollControlled: true,\n                        //                   shape: const RoundedRectangleBorder(\n                        //                     borderRadius: BorderRadius.only(\n                        //                       topLeft: Radius.circular(30),\n                        //                       topRight: Radius.circular(30),\n                        //                     ),\n                        //                   ),\n                        //                   builder: (context) {\n                        //                     return FollowersFollowingBottomSheet(controller: controller, isFollowersSheet: true);\n                        //                   }).then((ab) {\n                        //                 controller.searchController.clear();\n                        //               });*/\n                        //               },\n                        //               child: Obx(\n                        //                 () => RichText(\n                        //                     textAlign: TextAlign.center,\n                        //                     text: TextSpan(children: [\n                        //                       TextSpan(\n                        //                         text: controller.walletData.value?.pendingAmount != null\n                        //                             ? \"£${controller.walletData.value?.pendingAmount?.toStringAsFixed(2)}\"\n                        //                             : 'N/A',\n                        //                         style: AppStyles.labelTextStyle()\n                        //                             .copyWith(color: kWhiteColor, fontSize: 20.sp, fontWeight: FontWeight.bold),\n                        //                       ),\n                        //                       WidgetSpan(\n                        //                           alignment: PlaceholderAlignment.top,\n                        //                           child: Padding(\n                        //                             padding: const EdgeInsets.only(left: 5.0),\n                        //                             child: GestureDetector(\n                        //                               onTap: () async {\n                        //                                 await controller.tooltipControllerPending.showTooltip();\n                        //                               },\n                        //                               child: SuperTooltip(\n                        //                                 backgroundColor: kGreyContainerColor,\n                        //                                 showBarrier: true,\n                        //                                 controller: controller.tooltipControllerPending,\n                        //                                 content: Text(\n                        //                                   \"These funds are being processed and will be available for withdrawal soon.\",\n                        //                                   softWrap: true,\n                        //                                   style: AppStyles.labelTextStyle()\n                        //                                       .copyWith(fontSize: 14.sp, fontWeight: FontWeight.w400, color: kPrimaryColor),\n                        //                                 ),\n                        //                                 child: Container(\n                        //                                   width: 16.0,\n                        //                                   height: 16.0,\n                        //                                   decoration: const BoxDecoration(\n                        //                                     shape: BoxShape.circle,\n                        //                                     color: kPrimaryColor,\n                        //                                   ),\n                        //                                   child: const Icon(\n                        //                                     size: 16,\n                        //                                     Icons.info,\n                        //                                     color: kBlackColor,\n                        //                                   ),\n                        //                                 ),\n                        //                               ),\n                        //                             ),\n                        //                           )),\n                        //                       TextSpan(text: \"\\n\"),\n                        //                       WidgetSpan(\n                        //                           child: Padding(\n                        //                         padding: const EdgeInsets.only(top: 3.0),\n                        //                         child: Text(\n                        //                           \"Pending Amount\",\n                        //                           style: AppStyles.labelTextStyle().copyWith(\n                        //                             color: kWhiteColorTrans2,\n                        //                             fontSize: 16.sp,\n                        //                           ),\n                        //                         ),\n                        //                       )),\n                        //                     ])),\n                        //               )),\n                        //         ),\n                        //         const SizedBox(height: 10),\n                        //         Container(\n                        //           padding: EdgeInsets.only(left: 12, right: 12, bottom: 8, top: 0),\n                        //           clipBehavior: Clip.antiAlias,\n                        //           decoration: BoxDecoration(\n                        //             borderRadius: BorderRadius.circular(8),\n                        //             border: Border.all(\n                        //               color: kPrimaryColor,\n                        //               width: 1,\n                        //             ),\n                        //           ),\n                        //           child: Center(\n                        //             child: GestureDetector(\n                        //                 onTap: () {\n                        //                   /*showModalBottomSheet(\n                        //                     context: context,\n                        //                     backgroundColor: kBackgroundColor,\n                        //                     isScrollControlled: true,\n                        //                     shape: const RoundedRectangleBorder(\n                        //                       borderRadius: BorderRadius.only(\n                        //                         topLeft: Radius.circular(30),\n                        //                         topRight: Radius.circular(30),\n                        //                       ),\n                        //                     ),\n                        //                     builder: (context) {\n                        //                       return FollowersFollowingBottomSheet(controller: controller, isFollowersSheet: true);\n                        //                     }).then((ab) {\n                        //                   controller.searchController.clear();\n                        //                 });*/\n                        //                 },\n                        //                 child: Center(\n                        //                   child: RichText(\n                        //                       textAlign: TextAlign.center,\n                        //                       text: TextSpan(children: [\n                        //                         TextSpan(\n                        //                           text: controller.walletData.value?.readyToWithdrawAmount != null\n                        //                               ? \"£${controller.walletData.value?.readyToWithdrawAmount?.toStringAsFixed(2)}\"\n                        //                               : 'N/A',\n                        //                           style: AppStyles.labelTextStyle()\n                        //                               .copyWith(color: kWhiteColor, fontSize: 20.sp, fontWeight: FontWeight.bold),\n                        //                         ),\n                        //                         WidgetSpan(\n                        //                             alignment: PlaceholderAlignment.middle,\n                        //                             child: Padding(\n                        //                               padding: const EdgeInsets.only(left: 5.0),\n                        //                               child: GestureDetector(\n                        //                                 onTap: () async {\n                        //                                   await controller.tooltipControllerWithdrawal.showTooltip();\n                        //                                 },\n                        //                                 child: SuperTooltip(\n                        //                                   backgroundColor: kGreyContainerColor,\n                        //                                   showBarrier: true,\n                        //                                   controller: controller.tooltipControllerWithdrawal,\n                        //                                   content: Text(\n                        //                                     \"This is the amount available for you to withdraw, once you ask for a withdrawal we then check everything and approve it within 24hrs.\",\n                        //                                     softWrap: true,\n                        //                                     style: AppStyles.labelTextStyle()\n                        //                                         .copyWith(fontSize: 14.sp, fontWeight: FontWeight.w400, color: kPrimaryColor),\n                        //                                   ),\n                        //                                   child: Container(\n                        //                                     width: 16.0,\n                        //                                     height: 16.0,\n                        //                                     decoration: const BoxDecoration(\n                        //                                       shape: BoxShape.circle,\n                        //                                       color: kPrimaryColor,\n                        //                                     ),\n                        //                                     child: const Icon(\n                        //                                       size: 16,\n                        //                                       Icons.info,\n                        //                                       color: kBlackColor,\n                        //                                     ),\n                        //                                   ),\n                        //                                 ),\n                        //                               ),\n                        //                             )),\n                        //                         WidgetSpan(child: Text(\"\\n\")),\n                        //                         WidgetSpan(\n                        //                             child: Padding(\n                        //                                 padding: const EdgeInsets.only(top: 3.0),\n                        //                                 child: Text(\n                        //                                   \"Available to Withdraw Amount\",\n                        //                                   style: AppStyles.labelTextStyle().copyWith(\n                        //                                     color: kWhiteColorTrans2,\n                        //                                     fontSize: 14.sp,\n                        //                                   ),\n                        //                                 ))),\n                        //                         WidgetSpan(child: Text(\"\\n\")),\n                        //                         WidgetSpan(\n                        //                             child: Padding(\n                        //                           padding: const EdgeInsets.only(top: 5.0),\n                        //                           child: Text(\n                        //                             \"Withdraw\",\n                        //                             style: AppStyles.labelTextStyle().copyWith(\n                        //                               color: kPrimaryColor,\n                        //                               fontSize: 16.sp,\n                        //                             ),\n                        //                           ),\n                        //                         )),\n                        //                         WidgetSpan(\n                        //                             child: Padding(\n                        //                           padding: const EdgeInsets.only(top: 5.0),\n                        //                           child: GestureDetector(\n                        //                             onTap: () {\n                        //                               Get.toNamed(kRequestPaymentRoute);\n                        //                             },\n                        //                             child: Transform.rotate(\n                        //                                 angle: 68.5,\n                        //                                 child: const Icon(\n                        //                                   Icons.arrow_forward,\n                        //                                   color: kPrimaryColor,\n                        //                                 )),\n                        //                           ),\n                        //                         )),\n                        //                       ])),\n                        //                 )),\n                        //           ),\n                        //         ),\n                        //       ],\n                        //     ),\n                        //   ),\n                        // ),\n                      ],\n                    )),\n                SizedBox(height: 20.h),\n                // Uploading videos section\n                Text(\n                  'UPLOADING',\n                  style: AppStyles.labelTextStyle().copyWith(\n                    color: kWhiteColor,\n                    fontSize: 16,\n                    fontFamily: 'Norwester',\n                    // height: 0.08,\n                  ),\n                ),\n                SizedBox(height: 20),\n                // this part is for showing uploading videos\n                Obx(\n                  () => controller.isUploadingInProgress.isTrue\n                      ? Container(\n                          height: 200.h,\n                          child: Obx(\n                            () => ListView.builder(\n                              shrinkWrap: true,\n                              scrollDirection: Axis.horizontal,\n                              itemCount: controller.listUploadingVideos.length,\n                              // itemCount: 5,\n                              itemBuilder: (context, index) {\n                                final item = controller.listUploadingVideos[index];\n                                return Obx(() {\n                                  final progress = controller.getProgress(item.videoPath!).value;\n                                  printLogs(\"progressPercent ${item.videoPath}==> progressPercent $progress\");\n                                  final status = controller.getStatus(item.videoPath!).value;\n\n                                  printLogs(\"progressPercent ${item.videoPath}==> status $status\");\n                                  return UploadItem(\n                                    imageFile: item.thumbnailFile!,\n                                    status: status,\n                                    onRetry: () => controller.retryUpload(index),\n                                    onRemove: () => controller.removeItem(index),\n                                    progressPercent: progress,\n                                  );\n                                });\n                                // return UploadItem(\n                                //   // imageFile: File(\n                                //   //     '${controller.savedVideoDirectory?.path.split('Android')[0]}Download/vupop/receipts/payment_receipt_1735993090645.png'),\n                                //   imageFile: item.thumbnailFile!,\n                                //   status: controller.getStatus(item.videoPath!).value,\n                                //   // status: index == 2 ? UploadStatus.failed : UploadStatus.uploading,\n                                //   onRetry: () => controller.retryUpload(index),\n                                //   onRemove: () => controller.removeItem(index),\n                                //   progressPercent: controller.getProgress(item.videoPath!).value,\n                                // );\n                              },\n                            ),\n                          ),\n                        )\n                      : Text(\n                          'All videos uploaded successfully! No videos in progress.',\n                          style: AppStyles.labelTextStyle().copyWith(fontSize: 16.sp, color: kPrimaryColor),\n                        ),\n                ),\n                /*Text(\n                    controller.userData.value != null && controller.userData.value?.about != null && controller.userData.value!.about!.isNotEmpty\n                        ? controller.userData.value!.about!\n                        : SessionService().userDetail?.about ?? 'N/A',\n                    style: AppStyles.labelTextStyle().copyWith(color: kWhiteColor, fontSize: 16.sp)),*/\n                /* SizedBox(height: 20.h),\n                      Center(\n                        child: Text(\"My Passions\", style: AppStyles.labelTextStyle().copyWith(color: kWhiteColor, fontSize: 20.sp)),\n                      ),\n                      SizedBox(height: 10.h),\n                      SizedBox(\n                        width: Get.width,\n                        child: Obx(\n                          () => Wrap(\n                            spacing: 2.w,\n                            alignment: WrapAlignment.center,\n                            runAlignment: WrapAlignment.center,\n                            children: controller.userPassions.isEmpty\n                                ? [\n                                    GestureDetector(\n                                      onTap: () {\n                                        showModalBottomSheet(\n                                          context: context,\n                                          isScrollControlled: true,\n                                          builder: (BuildContext context) {\n                                            return FractionallySizedBox(\n                                              heightFactor: controller.passions.isEmpty\n                                                  ? 0.3\n                                                  : controller.passions.length < 4\n                                                      ? 0.5\n                                                      : 0.7,\n                                              child: Container(\n                                                width: Get.width,\n                                                height: Get.height,\n                                                padding: EdgeInsets.symmetric(vertical: 20.h, horizontal: 20.w),\n                                                decoration: const BoxDecoration(\n                                                  color: kGreyContainerColor,\n                                                  borderRadius: BorderRadius.only(\n                                                    topLeft: Radius.circular(20),\n                                                    topRight: Radius.circular(20),\n                                                  ),\n                                                ),\n                                                child: SingleChildScrollView(\n                                                  child: Column(\n                                                    children: [\n                                                      Text(\n                                                        'Select your passion',\n                                                        style: AppStyles.labelTextStyle().copyWith(\n                                                          color: kWhiteColor,\n                                                          fontSize: 20.sp,\n                                                        ),\n                                                      ),\n                                                      SizedBox(height: 20.h),\n                                                      Obx(\n                                                        () => Wrap(\n                                                          spacing: 2.w,\n                                                          alignment: WrapAlignment.center,\n                                                          runAlignment: WrapAlignment.center,\n                                                          children: List.generate(\n                                                            controller.passions.length,\n                                                            (index) {\n                                                              final passion = controller.passions[index];\n                                                              final isSelected = controller.userPassions.contains(passion);\n                                                              return Padding(\n                                                                padding: const EdgeInsets.only(bottom: 5),\n                                                                child: GestureDetector(\n                                                                  onTap: () {\n                                                                    controller.addPassion(passion);\n                                                                  },\n                                                                  child: Chip(\n                                                                    label: Row(\n                                                                      mainAxisSize: MainAxisSize.min,\n                                                                      children: [\n                                                                        Text(\n                                                                          passion.title ?? '',\n                                                                          style: AppStyles.labelTextStyle().copyWith(\n                                                                            color: kBlackColor,\n                                                                            fontSize: 16.sp,\n                                                                          ),\n                                                                        ),\n                                                                        if (isSelected)\n                                                                          Icon(\n                                                                            Icons.check,\n                                                                            color: kBlackColor,\n                                                                            size: 16.sp,\n                                                                          ),\n                                                                      ],\n                                                                    ),\n                                                                    backgroundColor: isSelected ? kPrimaryColor.withOpacity(0.7) : kPrimaryColor,\n                                                                  ),\n                                                                ),\n                                                              );\n                                                            },\n                                                          ),\n                                                        ),\n                                                      ),\n                                                    ],\n                                                  ),\n                                                ),\n                                              ),\n                                            );\n                                          },\n                                        );\n                                      },\n                                      child: Container(\n                                        padding: EdgeInsets.symmetric(vertical: 5.h, horizontal: 10.w),\n                                        decoration: BoxDecoration(\n                                          color: kPrimaryColor,\n                                          borderRadius: BorderRadius.circular(10),\n                                        ),\n                                        child: Text(\n                                          'Add Passions',\n                                          style: AppStyles.labelTextStyle().copyWith(\n                                            color: kBlackColor,\n                                            fontSize: 16.sp,\n                                          ),\n                                        ),\n                                      ),\n                                    ),\n                                  ]\n                                : List.generate(\n                                    controller.userPassions.length,\n                                    (index) => Padding(\n                                      padding: const EdgeInsets.only(bottom: 5),\n                                      child: SizedBox(\n                                        height: 40.h,\n                                        // width: 100.w,\n                                        child: Chip(\n                                          label: Text(\n                                            controller.userPassions[index].title ?? '',\n                                            style: AppStyles.labelTextStyle().copyWith(\n                                              color: kBlackColor,\n                                              fontSize: 16.sp,\n                                            ),\n                                          ),\n                                          backgroundColor: kPrimaryColor,\n                                        ),\n                                      ),\n                                    ),\n                                  ),\n                          ),\n                        ),\n                      ),*/\n                SizedBox(height: 30),\n\n                // for showing uploaded clips\n                Text(\n                  'Uploaded Clips',\n                  style: AppStyles.labelTextStyle().copyWith(\n                    color: kWhiteColor,\n                    fontSize: 16,\n                    fontFamily: 'Norwester',\n                    // height: 0.08,\n                  ),\n                ),\n                SizedBox(height: 20),\n                SizedBox(\n                  height: 280.h,\n                  width: Get.width,\n                  child: Obx(\n                    () => controller.isGettingPosts.value == true\n                        ? Shimmer.fromColors(\n                            baseColor: kShimmerbaseColor,\n                            highlightColor: kShimmerhighlightColor,\n                            child: Container(\n                              width: 180.w,\n                              height: 200.h,\n                              color: Colors.grey,\n                            ),\n                          )\n                        : SizedBox(\n                            height: 260.h,\n                            width: Get.width * 0.9,\n                            child: Obx(\n                              () => controller.userPosts.isEmpty\n                                  ? Text(\n                                      'No posts found',\n                                      style: AppStyles.labelTextStyle().copyWith(fontSize: 16.sp, color: kPrimaryColor),\n                                    )\n                                  : PageView.builder(\n                                      itemCount: controller.userPosts.length,\n                                      controller: controller.pageController,\n                                      itemBuilder: (BuildContext context, int index) {\n                                        printLogs('inside the builder');\n                                        if (controller.userPosts.isEmpty) {\n                                          //return const Center(child: CustomImageShimmer());\n                                          return Center(\n                                            child: Text(\n                                              'No posts found',\n                                              style: AppStyles.labelTextStyle().copyWith(fontSize: 16.sp, color: kPrimaryColor),\n                                            ),\n                                          );\n                                        }\n\n                                        return ListenableBuilder(\n                                          listenable: controller.pageController,\n                                          builder: (context, child) {\n                                            double scale = 1.0;\n                                            if (controller.pageController.position.hasContentDimensions) {\n                                              scale = 1 - (controller.pageController.page! - index).abs() * 0.3;\n                                            }\n\n                                            bool isPortrait = controller.userPosts[index].isPortrait ?? false;\n\n                                            return Center(\n                                              child: GestureDetector(\n                                                onTap: () async {\n                                                  /*controller.isVideoLoading.value = true;\n                                                  controller.tappedPostIndex.value = index;\n                                                  controller.disposeVideoPlayer();\n                                                  int postLength = index == 0 && controller.userPosts.length >= 3\n                                                      ? 3\n                                                      : index == 0 && controller.userPosts.length < 3\n                                                          ? controller.userPosts.length\n                                                          : controller.userPosts.length - index;\n                                                  printLogs(\"=====postLength ${postLength}\");\n                                                  printLogs(\"=====index ${index}\");\n                                                  printLogs(\"=====controller.userPosts.length - index ${controller.userPosts.length - index}\");\n                                                  printLogs(\"=====controller.userPosts.length ${controller.userPosts.length}\");\n                                                  controller\n                                                      .initializeAllControllers(index, postLength > 3 ? 3 : postLength, isFromProfileScreen: true)\n                                                      .then((val) {\n                                                    controller.videoControllers.first.play();\n                                                  });*/\n\n                                                  controller.tappedPostIndex.value = index;\n                                                  if (controller.userPosts.length < 3) {\n                                                    // printLogs(\"=====index ${index}\");\n                                                    // printLogs(\"=====controller.userPosts.length - index ${controller.userPosts.length - index}\");\n                                                    // printLogs(\"=====controller.userPosts.length ${controller.userPosts.length}\");\n                                                    controller\n                                                        .initializeAllControllers(\n                                                            index, index > 0 ? controller.userPosts.length - index : controller.userPosts.length)\n                                                        .then((a) {\n                                                      controller.videoControllers.first.play();\n                                                    });\n                                                  } else {\n                                                    controller.initializeAllControllers(index, 3).then((val) {\n                                                      controller.videoControllers.first.play();\n                                                    });\n                                                  }\n                                                  // print('===============is initialiazed ${controller.videoControllers[index].value.isInitialized}');\n                                                  Get.toNamed(kProfileSwipeViewPosts);\n                                                },\n                                                // Modified onTap for navigating to swipe view\n                                                /*onTap: () async {\n                                                  controller.isVideoLoading.value = true;\n                                                  controller.tappedPostIndex.value = index;\n                                                  await controller.disposeVideoPlayer();\n\n                                                  // Determine how many videos to load based on available posts\n                                                  int videosToLoad = min(3, controller.userPosts.length - index);\n\n                                                  // Play the first video\n                                                  if (controller.videoControllers.isNotEmpty) {\n                                                    controller.videoControllers.first.play();\n                                                  } else {\n                                                    // Initialize controllers\n                                                    await controller.initializeAllControllers(index, videosToLoad);\n                                                  }\n\n                                                  Get.toNamed(kProfileSwipeViewPosts);\n                                                },*/\n                                                child: Transform.scale(\n                                                  scale: scale,\n                                                  child: Stack(\n                                                    alignment: AlignmentDirectional.center,\n                                                    children: [\n                                                      Padding(\n                                                        padding: const EdgeInsets.all(8.0),\n                                                        child: Container(\n                                                          width: 180.w,\n                                                          height: 240.h,\n                                                          decoration: BoxDecoration(\n                                                            borderRadius: BorderRadius.circular(8),\n                                                            border: Border.all(color: kGreyContainerColor, width: 1),\n                                                            boxShadow: [\n                                                              BoxShadow(\n                                                                color: kGreyContainerColor2.withOpacity(0.5),\n                                                                spreadRadius: 1,\n                                                                blurRadius: 5,\n                                                                offset: const Offset(0, 3),\n                                                              ),\n                                                            ],\n                                                          ),\n                                                          child: SizedBox(\n                                                            height: 50.h,\n                                                            child: Image.network(\n                                                              controller.userPosts[index].thumbnail ?? '',\n                                                              fit: BoxFit.contain,\n                                                              loadingBuilder: (context, child, loadingProgress) {\n                                                                if (loadingProgress == null) {\n                                                                  return SizedBox(\n                                                                    width: Get.width,\n                                                                    height: Get.height,\n                                                                    child: child,\n                                                                  );\n                                                                } else {\n                                                                  return const CustomImageShimmer();\n                                                                }\n                                                              },\n                                                            ),\n                                                          ),\n                                                        ),\n                                                      ),\n                                                      Positioned(\n                                                        bottom: 10,\n                                                        left: 10,\n                                                        child: Visibility(\n                                                          visible: controller.userPosts[index].views?.isNotEmpty ?? false,\n                                                          child: SizedBox(\n                                                            child: Row(\n                                                              children: [\n                                                                Image.asset(\n                                                                  kVideoImage,\n                                                                  color: kWhiteColor,\n                                                                  scale: 3.0,\n                                                                ),\n                                                                SizedBox(\n                                                                  width: 10.w,\n                                                                ),\n                                                                Text(\n                                                                  \"${controller.userPosts[index].views?.length}\",\n                                                                  style: const TextStyle(color: kWhiteColor),\n                                                                ),\n                                                              ],\n                                                            ),\n                                                          ),\n                                                        ),\n                                                      ),\n                                                    ],\n                                                  ),\n                                                ),\n                                              ),\n                                            );\n                                          },\n                                        );\n                                      },\n                                    ),\n                            ),\n                          ),\n                  ),\n                ),\n                SizedBox(height: 10.h),\n              ],\n            ),\n          ),\n          /*bottomNavigationBar: Padding(\n            padding: EdgeInsets.symmetric(horizontal: 20.h),\n            child: SwipeButton.expand(\n              thumb: const Icon(\n                Icons.double_arrow_rounded,\n                color: kBlackColor,\n              ),\n              activeTrackColor: kPrimaryColor.withOpacity(0.25),\n              inactiveTrackColor: kGreyContainerColor.withOpacity(0.5),\n              activeThumbColor: kPrimaryColor,\n              inactiveThumbColor: kGreyContainerColor.withOpacity(0.5),\n              onSwipeStart: () {\n                // Set isSwiping to true when swipe starts\n                controller.isSwiping.value = true;\n              },\n              onSwipeEnd: () {\n                controller.isSwiping.value = false;\n                Get.toNamed(kCreateHighlightedPost);\n              },\n              child: SizedBox(\n                width: Get.width,\n                child: Center(\n                  child: Text(\"My Highlight real \\n Swipe --->\",\n                      textAlign: TextAlign.center, style: AppStyles.labelTextStyle().copyWith(color: kPrimaryColor, fontSize: 18.sp)),\n                ),\n              ),\n            ),\n          ),*/\n        ),\n      ),\n    );\n  }\n}\n\nclass UploadItem extends StatelessWidget {\n  final File imageFile;\n  final UploadStatus status;\n  final VoidCallback onRetry;\n  final VoidCallback onRemove;\n  final double progressPercent;\n\n  const UploadItem({\n    Key? key,\n    required this.imageFile,\n    required this.status,\n    required this.onRetry,\n    required this.onRemove,\n    required this.progressPercent,\n  }) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      height: 200.h,\n      width: 150.w,\n      margin: EdgeInsets.symmetric(horizontal: 12),\n      child: Stack(\n        fit: StackFit.expand,\n        children: [\n          // Image placeholder (in a real app, use Image.file(imageFile))\n          Container(\n            decoration: BoxDecoration(\n              borderRadius: BorderRadius.circular(8),\n              image: DecorationImage(\n                image: FileImage((imageFile)),\n                //AssetImage('assets/placeholder_image.jpg'),\n                fit: BoxFit.cover,\n              ),\n            ),\n          ),\n\n          // Upload progress indicator at bottom\n          /*if (status == UploadStatus.uploading)\n            Positioned(\n              bottom: 12,\n              left: 0,\n              right: 0,\n              child: Center(\n                child: Container(\n                  padding: EdgeInsets.symmetric(horizontal: 8, vertical: 4),\n                  decoration: BoxDecoration(\n                    color: kPrimaryColor,\n                    borderRadius: BorderRadius.circular(20),\n                  ),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    mainAxisSize: MainAxisSize.min,\n                    children: [\n                      Icon(\n                        Icons.arrow_upward,\n                        color: kBlackColor,\n                        size: 16,\n                      ),\n                      SizedBox(width: 4),\n                      Text(\n                        \"85%\",\n                        style: TextStyle(\n                          color: kBlackColor,\n                          fontWeight: FontWeight.bold,\n                          fontSize: 14,\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),*/\n          if (status == UploadStatus.uploading) ...[\n            // Dark overlay showing remaining progress\n            Positioned.fill(\n              child: Align(\n                alignment: Alignment.centerRight,\n                child: FractionallySizedBox(\n                  widthFactor: 1.0 - progressPercent.clamp(0.0, 1.0),\n                  alignment: Alignment.bottomCenter,\n                  child: Container(\n                    decoration: BoxDecoration(\n                      color: Colors.black.withOpacity(0.6),\n                      borderRadius: BorderRadius.circular(8),\n                    ),\n                  ),\n                ),\n              ),\n            ),\n\n            // Upload indicator with percentage\n            Positioned(\n              bottom: 12,\n              left: 0,\n              right: 0,\n              child: Center(\n                child: Container(\n                  padding: EdgeInsets.symmetric(horizontal: 8, vertical: 4),\n                  decoration: BoxDecoration(\n                    color: kPrimaryColor,\n                    borderRadius: BorderRadius.circular(20),\n                  ),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    mainAxisSize: MainAxisSize.min,\n                    children: [\n                      Icon(\n                        Icons.arrow_upward,\n                        color: kBlackColor,\n                        size: 16,\n                      ),\n                      SizedBox(width: 4),\n                      Text(\n                        \"${(progressPercent * 100).toInt()}%\",\n                        style: TextStyle(\n                          color: kBlackColor,\n                          fontWeight: FontWeight.bold,\n                          fontSize: 14,\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ],\n\n          if (status == UploadStatus.hold) ...[\n            // Dark overlay showing remaining progress\n            Positioned.fill(\n              child: Align(\n                alignment: Alignment.centerRight,\n                child: FractionallySizedBox(\n                  widthFactor: 1.0 - progressPercent.clamp(0.0, 1.0),\n                  alignment: Alignment.bottomCenter,\n                  child: Container(\n                    decoration: BoxDecoration(\n                      color: Colors.black.withOpacity(0.6),\n                      borderRadius: BorderRadius.circular(8),\n                    ),\n                  ),\n                ),\n              ),\n            ),\n\n            // Upload indicator with percentage\n            Positioned(\n              bottom: 12,\n              left: 0,\n              right: 0,\n              child: Center(\n                child: Container(\n                  padding: EdgeInsets.symmetric(horizontal: 8, vertical: 4),\n                  decoration: BoxDecoration(\n                    color: kPrimaryColor,\n                    borderRadius: BorderRadius.circular(20),\n                  ),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    mainAxisSize: MainAxisSize.min,\n                    children: [\n                      Icon(\n                        Icons.arrow_upward,\n                        color: kBlackColor,\n                        size: 16,\n                      ),\n                      SizedBox(width: 4),\n                      Text(\n                        \"0%\",\n                        style: TextStyle(\n                          color: kBlackColor,\n                          fontWeight: FontWeight.bold,\n                          fontSize: 14,\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ],\n\n          /*Container(\n              decoration: BoxDecoration(\n                borderRadius: BorderRadius.circular(8),\n                color: kBlackColor.withOpacity(0.5),\n              ),\n              child: const Center(\n                child: CircularProgressIndicator(\n                  valueColor: AlwaysStoppedAnimation<Color>(kPrimaryColor),\n                ),\n              ),\n            ),*/\n\n          if (status == UploadStatus.failed)\n            Container(\n              decoration: BoxDecoration(\n                borderRadius: BorderRadius.circular(8),\n                color: kBlackTransparentColor.withOpacity(0.7),\n              ),\n              child: Column(\n                mainAxisAlignment: MainAxisAlignment.center,\n                children: [\n                  const Text(\n                    'Failed Uploading',\n                    style: TextStyle(\n                      color: kWhiteColor,\n                      fontSize: 14,\n                    ),\n                    textAlign: TextAlign.center,\n                  ),\n                  const SizedBox(height: 5),\n                  ElevatedButton(\n                    onPressed: onRetry,\n                    style: ElevatedButton.styleFrom(\n                      backgroundColor: kPrimaryColor,\n                      minimumSize: const Size(60, 25),\n                      padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),\n                    ),\n                    child: const Text(\n                      'Retry',\n                      style: TextStyle(\n                        color: kBlackColor,\n                        fontSize: 12,\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n\n          // Close button\n          Positioned(\n            top: 5,\n            right: 5,\n            child: GestureDetector(\n              onTap: onRemove,\n              child: Container(\n                width: 20,\n                height: 20,\n                decoration: const BoxDecoration(\n                  color: Colors.black54,\n                  shape: BoxShape.circle,\n                ),\n                child: const Icon(\n                  Icons.close,\n                  size: 14,\n                  color: kWhiteColor,\n                ),\n              ),\n            ),\n          ),\n\n          // Success indicator\n          if (status == UploadStatus.success)\n            Positioned(\n              bottom: 5,\n              left: 5,\n              child: Container(\n                padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 3),\n                decoration: BoxDecoration(\n                  color: kPrimaryColor,\n                  borderRadius: BorderRadius.circular(12),\n                ),\n                child: const Text(\n                  'OK',\n                  style: TextStyle(\n                    color: kBlackColor,\n                    fontSize: 10,\n                    fontWeight: FontWeight.bold,\n                  ),\n                ),\n              ),\n            ),\n        ],\n      ),\n    );\n  }\n}\n\nenum UploadStatus { uploading, hold, success, failed }\n"
        }
    ]
}